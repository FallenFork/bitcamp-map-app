{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/bitcamp_map_app/bitcamp-map-app/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/bitcamp_map_app/bitcamp-map-app/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/bitcamp_map_app/bitcamp-map-app/src/components/map/GoogleMapComponent.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport type React from \"react\";\r\nimport { useState, useCallback, useRef } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow, Polyline } from \"@react-google-maps/api\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport * as RadixSlider from \"@radix-ui/react-slider\"\r\n\r\nimport dotenv from 'dotenv'\r\nimport axios, { AxiosError } from \"axios\";\r\nimport { ApiError } from \"next/dist/server/api-utils\";\r\ndotenv.config();\r\n\r\n// Use environment variable for API key (will be replaced with a placeholder for demo purposes)\r\nconst GOOGLE_MAPS_API_KEY = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY\r\nconst BACKEND_URL = \"http://172.23.30.84:5000\"\r\n\r\nif (!GOOGLE_MAPS_API_KEY) {\r\n  // you can throw error here and \r\n  // let [Error Boundary](https://reactjs.org/docs/error-boundaries.html)\r\n  // handle it\r\n  // or return an component that says \"Google Token is not set\"\r\n  throw new Error('Google token is not set');\r\n}\r\n\r\n// Define container style for the map\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '500px'\r\n};\r\n\r\n// Initial center of the map (world view)\r\nconst initialCenter = {\r\n  lat: 20,\r\n  lng: 0\r\n};\r\n\r\ninterface MarkerData {\r\n  id: number;\r\n  position: google.maps.LatLngLiteral;\r\n  elevation: number | null;\r\n  loading: boolean;\r\n}\r\n\r\n/** Structure for geographic bounds (used for map fitting) */\r\ninterface Bounds {\r\n    southwest: google.maps.LatLngLiteral;\r\n    northeast: google.maps.LatLngLiteral;\r\n}\r\n\r\n/**\r\n * Expected structure of the successful response from the `/api/determine-route`\r\n * backend endpoint. **Adjust this based on the exact fields your `determine_route` returns.**\r\n */\r\ninterface RouteResult {\r\n    // Fields returned by your backend's determine_route function\r\n    index?: number; // Optional, from your backend example\r\n    summary?: string; // Optional, from your backend example\r\n    duration_text?: string; // Optional\r\n    duration_numerical?: number; // Optional (renamed from backend example for consistency)\r\n    distance_text?: string; // Optional\r\n    distance_numerical?: number; // Optional (renamed from backend example for consistency)\r\n    encoded_polyline: string; // The crucial field for drawing the route\r\n    bounds?: Bounds | null; // Optional: Important for map fitting (Make sure backend returns this structure if needed)\r\n    // Add any other relevant fields your backend returns\r\n    message?: string; // Example: Add a message field if your backend sends one\r\n    slider_input?: number; // Example: Include the slider value used\r\n}\r\n\r\ninterface DistanceElevationSliderProps {\r\n    onValueChange?: (value: number) => void\r\n}\r\n\r\nfunction DistanceElevationSlider({ onValueChange }: DistanceElevationSliderProps) {\r\n  const [value, setValue] = useState(50)\r\n\r\n  const handleValueChange = (newValue: number[]) => {\r\n    setValue(newValue[0])\r\n    onValueChange?.(newValue[0])\r\n    console.log(newValue[0])\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md\">\r\n      <div className=\"relative pt-6 pb-2\">\r\n        <div className=\"absolute inset-0 flex justify-between items-start pointer-events-none z-10\">\r\n          <span className=\"text-gray-600 mb-4\">Distance</span>\r\n          <span className=\"text-gray-600 mb-4\">Elevation</span>\r\n        </div>\r\n\r\n        {/* Track background */}\r\n        <div className=\"absolute inset-x-0 top-8 bottom-4 bg-gradient-to-r from-blue-500 to-green-500 rounded-full\" />\r\n\r\n        {/* Slider with bubble inside Thumb */}\r\n        <RadixSlider.Root\r\n          value={[value]}\r\n          onValueChange={handleValueChange}\r\n          max={100}\r\n          step={1}\r\n          className=\"relative z-20 flex items-center h-10 w-full touch-none select-none\"\r\n        >\r\n          <RadixSlider.Track className=\"bg-transparent relative h-2 w-full rounded-full\">\r\n            <RadixSlider.Range className=\"absolute h-full bg-transparent\" />\r\n          </RadixSlider.Track>\r\n\r\n          <RadixSlider.Thumb\r\n            className=\"group relative block w-6 h-6 bg-white border border-gray-300 shadow-md rounded-full focus:outline-none\"\r\n            aria-label=\"Slider thumb\"\r\n          >\r\n            <div className=\"absolute -top-10 left-1/2 -translate-x-1/2 px-2 py-1 bg-white text-sm font-medium rounded-md shadow-md z-30 whitespace-nowrap\">\r\n              {value}%\r\n            </div>\r\n          </RadixSlider.Thumb>\r\n        </RadixSlider.Root>\r\n      </div>\r\n\r\n      {/* Bottom labels */}\r\n      <div className=\"flex justify-between text-sm text-muted-foreground mt-1\">\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst GoogleMapComponent: React.FC = () => {\r\n  const [map, setMap] = useState<google.maps.Map | null>(null);\r\n  const [markers, setMarkers] = useState<MarkerData[]>([]);\r\n  const [selectedMarker, setSelectedMarker] = useState<MarkerData | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [sliderValue, setSliderValue] = useState<number>(50);\r\n  const [routeResult, setRouteResult] = useState<RouteResult | null>(null); // **NEW: State for route data**\r\n  const [isLoading, setIsLoading] = useState<boolean>(false); // **NEW: Loading state**\r\n  const [error, setError] = useState<string | null>(null); // **NEW: Error state**\r\n  const geocoderRef = useRef<google.maps.Geocoder | null>(null);\r\n  const elevationServiceRef = useRef<google.maps.ElevationService | null>(null);\r\n\r\n  // Initialize map\r\n  const onLoad = useCallback((map: google.maps.Map) => {\r\n    setMap(map);\r\n    geocoderRef.current = new google.maps.Geocoder();\r\n    elevationServiceRef.current = new google.maps.ElevationService();\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(() => {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  // Function to handle map clicks\r\n  const handleMapClick = useCallback((event: google.maps.MapMouseEvent) => {\r\n    if (isLoading) return;\r\n    if (event.latLng) {\r\n      const newMarker: MarkerData = {\r\n        id: Date.now(),\r\n        position: {\r\n          lat: event.latLng.lat(),\r\n          lng: event.latLng.lng()\r\n        },\r\n        elevation: null,\r\n        loading: true\r\n      };\r\n\r\n      setMarkers(prev => {\r\n        const updatedMarkers = [...prev, newMarker];\r\n        return updatedMarkers.length > 2 ? updatedMarkers.slice(-2) : updatedMarkers;\r\n      });\r\n\r\n      // Get elevation data\r\n      if (elevationServiceRef.current) {\r\n        elevationServiceRef.current.getElevationForLocations({\r\n          locations: [{ lat: event.latLng.lat(), lng: event.latLng.lng() }]\r\n        }, (results, status) => {\r\n          if (status === 'OK' && results && results[0]) {\r\n            setMarkers(prev =>\r\n              prev.map(marker =>\r\n                marker.id === newMarker.id\r\n                  ? { ...marker, elevation: results[0].elevation, loading: false }\r\n                  : marker\r\n              )\r\n            );\r\n          } else {\r\n            setMarkers(prev =>\r\n              prev.map(marker =>\r\n                marker.id === newMarker.id\r\n                  ? { ...marker, elevation: null, loading: false }\r\n                  : marker\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Function to handle search\r\n  const handleSearch = () => {\r\n    if (isLoading) return;\r\n    if (geocoderRef.current && searchQuery.trim() !== '') {\r\n      geocoderRef.current.geocode({ address: searchQuery }, (results, status) => {\r\n        if (status === 'OK' && results && results[0]) {\r\n          const location = results[0].geometry.location;\r\n\r\n          // Center the map on the search result\r\n          if (map) {\r\n            map.setCenter(location);\r\n            map.setZoom(14);\r\n          }\r\n\r\n          // Create a new marker at the search location\r\n          const newMarker: MarkerData = {\r\n            id: Date.now(),\r\n            position: {\r\n              lat: location.lat(),\r\n              lng: location.lng()\r\n            },\r\n            elevation: null,\r\n            loading: true\r\n          };\r\n\r\n          setMarkers(prev => [...prev, newMarker]);\r\n\r\n          // Get elevation data\r\n          if (elevationServiceRef.current) {\r\n            elevationServiceRef.current.getElevationForLocations({\r\n              locations: [{ lat: location.lat(), lng: location.lng() }]\r\n            }, (elevResults, elevStatus) => {\r\n              if (elevStatus === 'OK' && elevResults && elevResults[0]) {\r\n                setMarkers(prev =>\r\n                  prev.map(marker =>\r\n                    marker.id === newMarker.id\r\n                      ? { ...marker, elevation: elevResults[0].elevation, loading: false }\r\n                      : marker\r\n                  )\r\n                );\r\n              } else {\r\n                setMarkers(prev =>\r\n                  prev.map(marker =>\r\n                    marker.id === newMarker.id\r\n                      ? { ...marker, elevation: null, loading: false }\r\n                      : marker\r\n                  )\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callDetermineRouteAPI = useCallback(async (start: google.maps.LatLngLiteral, end: google.maps.LatLngLiteral, sliderVal: number) => {\r\n    console.log(\"getting route\")\r\n    setIsLoading(true);\r\n    setError(null);\r\n    setRouteResult(null); // Clear previous route during loading\r\n\r\n    try {\r\n        const targetUrl = `${BACKEND_URL}/api/determine-route`;\r\n        console.log(`Calling ${targetUrl} with:`, { start, end, sliderVal });\r\n\r\n        const response = await axios.post<RouteResult>(targetUrl, {\r\n            start:start,        // Send {lat, lng} object\r\n            end: end,          // Send {lat, lng} object\r\n            sliderValue: sliderVal // Send the number\r\n        });\r\n\r\n        console.log('Backend response:', response.data);\r\n        setRouteResult(response.data); // Store the successful result\r\n\r\n        // Fit map to bounds if available and valid\r\n        if (response.data.bounds?.southwest && response.data.bounds?.northeast && map) {\r\n             try {\r\n                const bounds = new window.google.maps.LatLngBounds(\r\n                    response.data.bounds.southwest,\r\n                    response.data.bounds.northeast\r\n                );\r\n                map.fitBounds(bounds);\r\n                map.panBy(0, 0); // Nudge map\r\n             } catch (boundsError) {\r\n                 console.error(\"Error processing bounds:\", boundsError);\r\n                 // Don't set global error, just log problem with bounds\r\n             }\r\n        } else if (response.data.encoded_polyline) {\r\n            // Fallback: Fit bounds based on polyline if bounds not provided/valid\r\n            const decodedPath = decodePolyline(response.data.encoded_polyline);\r\n             if (decodedPath.length > 0 && map && window.google?.maps?.LatLngBounds) {\r\n                 const bounds = new window.google.maps.LatLngBounds();\r\n                 decodedPath.forEach(point => bounds.extend(point));\r\n                 map.fitBounds(bounds);\r\n                 map.panBy(0, 0);\r\n             }\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        console.error('Error determining route:', err);\r\n        let errorMsg = 'Failed to determine route.';\r\n        if (axios.isAxiosError(err)) {\r\n            const axiosError = err as AxiosError<ApiError>; // Type the error\r\n            errorMsg = axiosError.message || errorMsg;\r\n        } else if (err instanceof Error) {\r\n            errorMsg = err.message;\r\n        }\r\n        setError(errorMsg);\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n}, [map]); // Depend on map instance\r\n\r\nconst decodePolyline = (encodedPolyline: string): google.maps.LatLng[] => {\r\n    if (!encodedPolyline || typeof window.google?.maps?.geometry?.encoding?.decodePath !== 'function') {\r\n        console.warn(\"Geometry library not available for polyline decoding.\");\r\n        return [];\r\n    }\r\n    try {\r\n        return window.google.maps.geometry.encoding.decodePath(encodedPolyline);\r\n    } catch(e) {\r\n        console.error(\"Failed to decode polyline:\", encodedPolyline, e);\r\n        return [];\r\n    }\r\n  };\r\n\r\n  // Function handles generate\r\nconst handleGenerate = () => {\r\n  if (markers.length !== 2) {\r\n    alert(\"Please place exactly two markers to generate a path.\");\r\n    return;\r\n  }\r\n\r\n  const [start, end] = markers;\r\n\r\n  callDetermineRouteAPI(start.position, end.position, Math.floor(sliderValue / 10))\r\n\r\n  // call the generate route function to generate a route \r\n\r\n  // Example: Log the path start and end\r\n  console.log(\"Generating path from:\", start.position, \"to\", end.position);\r\n\r\n  // PLACEHOLDER: Call your path-generating logic here\r\n  // generatePath(start.position, end.position);\r\n} \r\n\r\n  // Function to clear all markers\r\n  const clearMarkers = () => {\r\n    setMarkers([]);\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  const handleSliderChange = (value: number) => {\r\n    setSliderValue(value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"relative w-full\">\r\n        <DistanceElevationSlider onValueChange={handleSliderChange} />\r\n      <div className=\"mb-4 flex gap-2\">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Search for a location\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\r\n          className=\"flex-grow\"\r\n        />\r\n        <Button onClick={handleSearch}>Search</Button>\r\n        <Button variant=\"outline\" onClick={clearMarkers}>Clear Map</Button>\r\n      </div>\r\n\r\n      <Card className=\"border border-border shadow-sm\">\r\n        <CardContent className=\"p-0 overflow-hidden rounded-md\">\r\n          <LoadScript googleMapsApiKey={GOOGLE_MAPS_API_KEY} libraries={[\"places\"]}>\r\n            <GoogleMap\r\n              mapContainerStyle={containerStyle}\r\n              center={initialCenter}\r\n              zoom={2}\r\n              onClick={handleMapClick}\r\n              onLoad={onLoad}\r\n              onUnmount={onUnmount}\r\n              options={{\r\n                fullscreenControl: true,\r\n                mapTypeControl: true,\r\n                streetViewControl: false,\r\n                zoomControl: true,\r\n              }}\r\n            >\r\n              {markers.map((marker) => (\r\n                <Marker\r\n                  key={marker.id}\r\n                  position={marker.position}\r\n                  onClick={() => setSelectedMarker(marker)}\r\n                />\r\n              ))}\r\n\r\n              {selectedMarker && (\r\n                <InfoWindow\r\n                  position={selectedMarker.position}\r\n                  onCloseClick={() => setSelectedMarker(null)}\r\n                >\r\n                  <div className=\"p-2\">\r\n                    <h3 className=\"font-semibold\">Location Information</h3>\r\n                    <p>Latitude: {selectedMarker.position.lat.toFixed(6)}</p>\r\n                    <p>Longitude: {selectedMarker.position.lng.toFixed(6)}</p>\r\n                    <p>\r\n                      Elevation: {selectedMarker.loading\r\n                        ? 'Loading...'\r\n                        : selectedMarker.elevation !== null\r\n                          ? `${selectedMarker.elevation.toFixed(2)} meters`\r\n                          : 'Not available'}\r\n                    </p>\r\n                  </div>\r\n                </InfoWindow>\r\n              )}\r\n              {routeResult?.encoded_polyline && (\r\n                <Polyline\r\n                    path={decodePolyline(routeResult.encoded_polyline)}\r\n                    options={{ strokeColor: '#1a73e8', strokeWeight: 5, strokeOpacity: 0.8 }} // Google Maps blue\r\n                />\r\n              )}\r\n            </GoogleMap>\r\n          </LoadScript>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"mt-4\">\r\n        \r\n        <Button onClick={handleGenerate} disabled={isLoading || markers.length !== 2}>Generate Path</Button>\r\n        {routeResult && (\r\n            <div className=\"route-details section mt-4 p-4 border rounded-md bg-secondary/50\">\r\n                <h2 className=\"text-lg font-semibold mb-2\">Determined Route Details</h2>\r\n                {routeResult.summary && <p><strong>Summary:</strong> {routeResult.summary}</p>}\r\n                {routeResult.duration_text && <p><strong>Duration:</strong> {routeResult.duration_text}</p>}\r\n                {routeResult.distance_text && <p><strong>Distance:</strong> {routeResult.distance_text}</p>}\r\n                {routeResult.slider_input !== undefined && <p><strong>Slider Value Used:</strong> {routeResult.slider_input}</p>}\r\n                {/* Display other fields from your RouteResult if needed */}\r\n            </div>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <h2 className=\"text-2xl font-semibold text-blue-400\">Markers</h2>\r\n        {markers.length > 0 ? (\r\n          <div className=\"space-y-2\">\r\n            {markers.map((marker) => (\r\n              <Card key={marker.id} className=\"p-3\">\r\n                <div className=\"flex justify-between\">\r\n                  <div>\r\n                    <p>Lat: {marker.position.lat.toFixed(6)}, Lng: {marker.position.lng.toFixed(6)}</p>\r\n                    <p className=\"font-medium\">\r\n                      Elevation: {marker.loading\r\n                        ? 'Loading...'\r\n                        : marker.elevation !== null\r\n                          ? `${marker.elevation.toFixed(2)} meters`\r\n                          : 'Not available'}\r\n                    </p>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => {\r\n                      setMarkers(prev => prev.filter(m => m.id !== marker.id));\r\n                      if (selectedMarker?.id === marker.id) {\r\n                        setSelectedMarker(null);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-muted-foreground\">Click on the map to place markers.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleMapComponent;"],"names":[],"mappings":"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","debugId":null}}]
}